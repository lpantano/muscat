% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pbDS.R
\name{pbDS}
\alias{pbDS}
\title{Cluster-specific DE analysis using}
\usage{
pbDS(pb, design = NULL, coef = NULL, contrast = NULL,
  method = c("edgeR", "DESeq2", "limma-trend", "limma-voom"),
  min_cells = 10, verbose = TRUE)
}
\arguments{
\item{pb}{a \code{\link[SingleCellExperiment]{SingleCellExperiment}}
containing pseudobulks as returned by \code{\link{aggregateData}}.}

\item{design}{For edegR and limma, a design matrix with row and column names
created with \code{\link[stats]{model.matrix}}. 
For DESeq2, a formula containing variables in \code{colData(pb)}.}

\item{coef}{passed to \code{\link[edgeR]{glmQLFTest}}.
Ignored if \code{contrast} is not NULL.}

\item{contrast}{a matrix of contrasts created with \code{\link[limma]{makeContrasts}}.}

\item{method}{a character string.}

\item{min_cells}{a numeric. 
Specifies the minimum number of cells in a given cluster-sample 
required to consider the sample for differential testing.}

\item{verbose}{logical. Should information on progress be reported?}
}
\value{
a list containing 
\itemize{
\item a data.frame with differential testing results,
\item a \code{\link[edgeR]{DGEList}} object of length nb.-clusters, and
\item the \code{design} matrix, and \code{contrast} or \code{coef} used.
}
}
\description{
\code{run_edgeR} tests for cluster-specific 
  differential expression by aggregating single-cell 
  measurements and using \code{edgeR} for testing.
}
\details{
\code{run_edgeR} tests for cluster-specific 
  differential expression by aggregating single-cell 
  measurements. Depending on the selected \code{method},
  differential testing is performed on pseudo-bulk data
  obtained via...
  \describe{
  \item{\code{raw_counts}}{
    summing, for every gene, raw counts for each cluster-sample.}
  \item{\code{normed_counts}}{
    summing, for every gene, normalized counts for each cluster-sample.}
  \item{\code{scaled_cpm}}{
    summing, for every gene, scaled CPM for each cluster-sample.
    Scaled CPM are obtained by multiplying pseudo-bulk raw counts
    by effective library sizes and dividing by 1M.}}
}
\examples{
# simulate 5 clusters, 20\% of DE genes
data(sce)
    
# compute pseudobulk sum-counts & run DS analysis
pb <- aggregateData(sce)
res <- pbDS(pb, method = "limma-trend")

names(res)
names(res$table)
head(res$table$`stim-ctrl`$`B cells`)

# count nb. of DE genes by cluster
vapply(res$table$`stim-ctrl`, function(u) 
  sum(u$p_adj.loc < 0.05), numeric(1))

# get top 5 hits for ea. cluster w/ abs(logFC) > 1
library(dplyr)
lapply(res$table$`stim-ctrl`, function(u)
  filter(u, abs(logFC) > 1) \%>\% 
    arrange(p_adj) \%>\% 
    slice(seq_len(5)))

}
\author{
Helena L. Crowell \email{helena.crowell@uzh.ch} and Mark D. Robinson.
}
